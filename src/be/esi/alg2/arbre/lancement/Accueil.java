package be.esi.alg2.arbre.lancement;

import be.esi.alg2.arbre.db.ArbreDbException;
import be.esi.alg2.arbre.gui.AddNoeud;
import be.esi.alg2.arbre.gui.GDR;
import be.esi.alg2.arbre.gui.JDRechercheArbre;
import be.esi.alg2.arbre.gui.JPRechercheArbre;
import be.esi.alg2.arbre.gui.MaJTableArbre;
import be.esi.alg2.arbre.gui.NoeudSel;
import be.esi.alg2.arbre.metier.ArbreBinaireFacade;
import be.esi.alg2.arbre.mvc.ArbreModificationListener;
import be.esi.alg2.arbre.mvc.Modele;
import be.esi.alg2.arbre.mvc.NoeudBinaire;
import be.esi.alg2.gui.outils.MaJTableInitialisationException;
import be.esi.alg2.visuarbre.VisuArbre;
import flo.utils.panel.MsgOutil;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JOptionPane;

/**
 * JFrame d'accueil de l'application de visualisation des arbres binaires
 */
public class Accueil extends javax.swing.JFrame implements ArbreModificationListener {

    private Modele modele;
    private AddNoeud addNoeud;
    private JDRechercheArbre loadArbe;
    private NoeudSel noeudSel;
    private GDR parcourInfixe;

    /**
     * Creates new form Accueil
     */
    public Accueil() {

        initComponents();
        modele = ArbreBinaireFacade.getModele();
        visuArbre1.setModele(modele);

        setTitle("Arbre binaire ordonné");

        //Ajoute cette classe en temps qu'écouteur
        modele.addModificationListener(this);
        modele.addSelectionListener(visuArbre1);

        jMsupprimer.setEnabled(false);
        jMDelSousArbre.setEnabled(false);

        //Notifie les vues de la sélection d'un noeud
        visuArbre1.addPropertyChangeListener(VisuArbre.NOEUDSELECTED, new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {

                if ((NoeudBinaire) evt.getNewValue() == null) {
                    jMsupprimer.setEnabled(false);
                    jMDelSousArbre.setEnabled(false);
                } else {
                    jMsupprimer.setEnabled(true);
                    jMDelSousArbre.setEnabled(true);
                }

                modele.setSel((NoeudBinaire) evt.getNewValue());
            }
        });

        //Notifie les vues qu'un nouvel arbre a été chargé
        /*loadArbe.addPropertyChangeListener(MaJTableArbre.PROPERTY_EVENT_SELECT, new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                try {
                    ArbreCompletDto aDto = ArbreBinaireFacade.chargeArbre(evt.getNewValue().toString());

                } catch (ArbreDbException ex) {
                    MsgOutil.showErreur("Impossible de charger l'arbre", "Exception : "
                            + ex.getMessage());
                }
            }
        });*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        visuArbre1 = new be.esi.alg2.visuarbre.VisuArbre();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMNouveau = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jAjoutNoeud = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMSauve = new javax.swing.JMenuItem();
        jMSaveAs = new javax.swing.JMenuItem();
        jLLoad = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuGRD = new javax.swing.JMenuItem();
        jMenuRGD = new javax.swing.JMenuItem();
        jMenuGDR = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenu3 = new javax.swing.JMenu();
        jMVoir = new javax.swing.JMenuItem();
        jMsupprimer = new javax.swing.JMenuItem();
        jMDelSousArbre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout visuArbre1Layout = new javax.swing.GroupLayout(visuArbre1);
        visuArbre1.setLayout(visuArbre1Layout);
        visuArbre1Layout.setHorizontalGroup(
            visuArbre1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 652, Short.MAX_VALUE)
        );
        visuArbre1Layout.setVerticalGroup(
            visuArbre1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 497, Short.MAX_VALUE)
        );

        getContentPane().add(visuArbre1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Arbre");

        jMNouveau.setText("Nouveau");
        jMNouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMNouveauActionPerformed(evt);
            }
        });
        jMenu1.add(jMNouveau);
        jMenu1.add(jSeparator1);

        jAjoutNoeud.setText("Ajout d'un noeud");
        jAjoutNoeud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAjoutNoeudActionPerformed(evt);
            }
        });
        jMenu1.add(jAjoutNoeud);
        jMenu1.add(jSeparator3);

        jMSauve.setText("Sauver");
        jMSauve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSauveActionPerformed(evt);
            }
        });
        jMenu1.add(jMSauve);

        jMSaveAs.setText("Sauver comme ...");
        jMenu1.add(jMSaveAs);

        jLLoad.setText("Charger un arbre");
        jLLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLLoadActionPerformed(evt);
            }
        });
        jMenu1.add(jLLoad);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Vues");

        jMenuGRD.setText("GRD");
        jMenuGRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGRDActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuGRD);

        jMenuRGD.setText("RGD");
        jMenuRGD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRGDActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuRGD);

        jMenuGDR.setText("GDR");
        jMenuGDR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGDRActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuGDR);
        jMenu2.add(jSeparator4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Noeud Sélectionné");

        jMVoir.setText("Voir");
        jMVoir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMVoirActionPerformed(evt);
            }
        });
        jMenu3.add(jMVoir);

        jMsupprimer.setText("Supprimer");
        jMenu3.add(jMsupprimer);

        jMDelSousArbre.setText("Supprimer Sous-Arbre");
        jMenu3.add(jMDelSousArbre);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Show a dialog to add nodes.
     *
     * @param evt The event
     */
    private void jAjoutNoeudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAjoutNoeudActionPerformed
        if (this.addNoeud == null) {
            this.addNoeud = new AddNoeud();

            this.addNoeud.setModele(modele);
            this.addNoeud.setVisible(true);
        } else {
            this.addNoeud.setVisible(true);
        }
    }//GEN-LAST:event_jAjoutNoeudActionPerformed

    private void jMVoirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMVoirActionPerformed
        if (this.noeudSel == null) {
            this.noeudSel = new NoeudSel(this, false);

            modele.addSelectionListener(noeudSel);
            this.noeudSel.notifyNewSelection(modele.getSel());

            this.noeudSel.setVisible(true);
        } else {
            this.noeudSel.setVisible(true);
        }
    }//GEN-LAST:event_jMVoirActionPerformed

    private void jMenuGRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGRDActionPerformed
	if (this.parcourInfixe == null) {            
            this.parcourInfixe = new GDR(this, false);
            
            this.parcourInfixe.setModele(modele);
            
            modele.addModificationListener(this.parcourInfixe);
            modele.addSelectionListener(this.parcourInfixe);
            
            this.parcourInfixe.notifyModArbre();
            this.parcourInfixe.notifyNewSelection(modele.getSel());
            
            this.parcourInfixe.setVisible(true);
        } else {
            this.parcourInfixe.setVisible(true);
        }
    }//GEN-LAST:event_jMenuGRDActionPerformed

    private void jMenuRGDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRGDActionPerformed
	
    }//GEN-LAST:event_jMenuRGDActionPerformed

    private void jMenuGDRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGDRActionPerformed
	
    }//GEN-LAST:event_jMenuGDRActionPerformed

    private void jMNouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMNouveauActionPerformed
	
    }//GEN-LAST:event_jMNouveauActionPerformed

    private void jMSauveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSauveActionPerformed
        String nom = "";
        while (nom.equals("")) {
            nom = JOptionPane.showInputDialog(null,
                    "Nom pour le graphe :",
                    "Nom d'un graphe !", JOptionPane.QUESTION_MESSAGE);
        }
        try {
            ArbreBinaireFacade.persisteArbre(nom);
        } catch (ArbreDbException ex) {
            MsgOutil.showErreur(ex, "Une erreur est survenue lors de la sauvegarde\n"
                    + "SQLException : " + ex.getMessage());
        }
    }//GEN-LAST:event_jMSauveActionPerformed

    private void jLLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLLoadActionPerformed
        try {
            if (this.loadArbe == null) {
                this.loadArbe = new JDRechercheArbre(null, true, "Sélection d'arbres", new JPRechercheArbre(), new MaJTableArbre());
                this.loadArbe.setVisible(true);
            } else {
                this.loadArbe.setVisible(true);
            }
        } catch (MaJTableInitialisationException ex) {
            MsgOutil.showErreur("Impossible d'affiche la fenêtre",
                    "Une erreur interne est survenue, veuillez nous en excuser.\n"
                    + ex.getMessage());
        }
    }//GEN-LAST:event_jLLoadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Accueil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Accueil().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jAjoutNoeud;
    private javax.swing.JMenuItem jLLoad;
    private javax.swing.JMenuItem jMDelSousArbre;
    private javax.swing.JMenuItem jMNouveau;
    private javax.swing.JMenuItem jMSauve;
    private javax.swing.JMenuItem jMSaveAs;
    private javax.swing.JMenuItem jMVoir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuGDR;
    private javax.swing.JMenuItem jMenuGRD;
    private javax.swing.JMenuItem jMenuRGD;
    private javax.swing.JMenuItem jMsupprimer;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private be.esi.alg2.visuarbre.VisuArbre visuArbre1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void notifyModArbre() {
        this.visuArbre1.notifyModArbre();
        pack();
    }
}
