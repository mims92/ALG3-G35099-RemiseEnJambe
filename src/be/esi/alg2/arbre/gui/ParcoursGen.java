package be.esi.alg2.arbre.gui;

import be.esi.alg2.arbre.metier.ArbreMetierException;
import be.esi.alg2.arbre.mvc.Modele;
import be.esi.alg2.arbre.mvc.NoeudBinaire;
import be.esi.alg2.arbre.mvc.Valeur;
import java.awt.BorderLayout;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Florian Desneux
 */
public class ParcoursGen extends javax.swing.JPanel {

    protected static String EVT_DETECTED = "click";
    private Modele modele;
    private JList list;
    private DefaultListModel<Valeur> listModel;
    private JScrollPane scrollPane;
    private String typeParcours;

    /**
     * Creates new form ParcoursGen
     */
    public ParcoursGen() {
        initComponents();
        
        listModel = new DefaultListModel<>();
        list = new JList();

        list.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                System.out.println(list.getSelectedIndex());
            }
        });
    }

    public ParcoursGen(Modele modele, String typeParcours) throws ArbreMetierException, NoSuchMethodException, ClassNotFoundException {
        this.modele = modele;

        switch (typeParcours) {
            case "GRD":
                this.typeParcours = "Grd";
                break;
            case "GDR":
                this.typeParcours = "Gdr";
                break;
            case "RGD":
                this.typeParcours = "Rdg";
                break;
            default:
                throw new ArbreMetierException("Type de parcours inconnu");
        }

        listModel = new DefaultListModel<>();
        list = new JList();

        list.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                System.out.println(list.getSelectedIndex());
            }
        });
        setList();
    }

    public void setList() throws ClassNotFoundException {
        try {
            if (this.scrollPane != null) {
                remove(this.scrollPane);
            }

            this.listModel.clear();

            @SuppressWarnings("unchecked")
            Class clazz = Class.forName(this.typeParcours.toUpperCase());
            Method meth = clazz.getDeclaredMethod("get"+this.typeParcours);
         

            ArrayList<NoeudBinaire> valeur = (ArrayList<NoeudBinaire>)meth.invoke((Object[]) null);
            
            for (NoeudBinaire bin : valeur) {
                this.listModel.addElement(bin.getVal());

            }

            list = new JList(listModel);

            list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            list.setLayoutOrientation(JList.VERTICAL_WRAP);

            this.scrollPane = new JScrollPane(list);

            add(this.scrollPane, BorderLayout.CENTER);

            validate();
        } catch (NoSuchMethodException ex) {
            Logger.getLogger(ParcoursGen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SecurityException ex) {
            Logger.getLogger(ParcoursGen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ParcoursGen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(ParcoursGen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvocationTargetException ex) {
            Logger.getLogger(ParcoursGen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
